#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <175>;
    global-quick-tap;
    flavor = "balanced";
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
    hold-trigger-on-release;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <175>;
};

&sk {
    quick-release;
    release-after-ms = <850>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <33 36>;
        };
    };

    macros {
        p_the: p_the {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp E>;
            label = "P_THE";
        };

        p_ing: p_ing {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp N &kp G>;
            label = "P_ING";
        };

        p_and: p_and {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp N &kp D>;
            label = "P_AND";
        };

        p_ould: p_ould {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp U &kp L &kp D>;
            label = "P_OULD";
        };

        p_have: p_have {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp H &kp A &kp V &kp E>;
            label = "P_HAVE";
        };

        p_all: p_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp L &kp L>;
            label = "P_ALL";
        };

        p_you: p_you {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Y &kp O &kp U>;
            label = "P_YOU";
        };

        p_ver: p_ver {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp V &kp E &kp R>;
            label = "P_VER";
        };

        p_because: p_because {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp B &kp E &kp C &kp A &kp U &kp S &kp E>;
            label = "P_BECAUSE";
        };

        p_for: p_for {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp O &kp R>;
            label = "P_FOR";
        };

        p_com: p_com {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp M>;
            label = "P_COM";
        };

        p_ill: p_ill {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp L &kp L>;
            label = "P_ILL";
        };

        p_ess: p_ess {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp S &kp S>;
            label = "P_ESS";
        };

        p_ound: p_ound {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp U &kp N &kp D>;
            label = "P_OUND";
        };

        p_res: p_res {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp E &kp S>;
            label = "P_RES";
        };

        p_tion: p_tion {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp I &kp O &kp N>;
            label = "P_TION";
        };

        p_ight: p_ight {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp G &kp H &kp T>;
            label = "P_IGHT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
            &kp Y      &kp L  &kp O                       &kp U               &kp PERIOD       &kp B            &kp P      &kp D         &kp M  &kp F
            &kp I      &kp R  &kp A                       &kp H               &kp Z            &kp G            &kp C      &kp T         &kp N  &kp S
&kp ESCAPE  &kp MINUS  &kp X  &mt LEFT_CONTROL SQT        &mt LEFT_ALT COMMA  &kp SEMICOLON    &kp V            &kp W      &kp K         &kp Q  &kp J  &kp DELETE
                              &mt LEFT_COMMAND BACKSPACE  &kp E               &kp BACKSPACE    &kp RIGHT_SHIFT  &kp SPACE  &lt 2 ESCAPE
            >;
        };

        Poly {
            bindings = <
        &p_you   &p_ill  &p_ould  &p_ound  &trans    &p_because  &trans  &p_and  &trans   &p_for
        &p_ight  &p_res  &p_all   &p_have  &trans    &p_ing      &p_com  &p_the  &p_tion  &p_ess
&trans  &trans   &trans  &trans   &trans   &trans    &p_ver      &trans  &trans  &trans   &trans  &trans
                         &trans   &trans   &trans    &trans      &trans  &trans
            >;
        };

        adjust_layer {
            label = "ADJ";
            bindings = <
        &sys_reset   &bt BT_CLR  &out OUT_TOG  &trans  &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F12
        &bootloader  &bt BT_NXT  &trans        &trans  &trans    &trans  &kp F4  &kp F5  &kp F6  &kp F11
&trans  &trans       &bt BT_PRV  &trans        &trans  &trans    &trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                                 &trans        &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
